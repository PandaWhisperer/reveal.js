section
  section
    :markdown
      ## Inheritance
      * JavaScript's object model is *prototype*-based
      * Significantly different from the "classic" OO model (C++, Java, Ruby, etc.)
      * Most important difference: **there are no classes**

    aside.notes
      This is a test

  section
    h1 WAT?

  section
    :markdown
      ## No classes, are you serious?
      * JavaScript has no concept of classes built into the language
      * Instead, all we have are *instances* of objects
      * New objects can be created by *copying* existing objects
      * These objects remember which object they were copied from, and
        inherit certain features

  section
    :markdown
      ## The Prototype
      * JavaScript's object model is *prototype*-based (mmkay?)
      * Every object has a special property called `prototype`
      * An object's *prototype* is just another object
      * That object in turn has a prototype, creating what's known as a *prototype chain*
      * If no protype is set explicity, it will be `Object`

  section
    h2 Rolling our own classes
    ul
      li BUT - it's fairly easy to implement one <em>on top</em>
      pre: code.
        // Simple class model, no inheritance
        function Class(constructor, properties) {
          if (typeof constructor === "object") {
            return Class(function() {}, constructor)
          } else {
            // constructor
            function klass() {
              constructor.apply(this, arguments);
            }

            // prototype - more on this later
            klass.prototype = properties;
            klass.prototype.constructor = constructor;

            return klass;
          }
        }

  section
    h2 Rolling our own classes
    ul
      li Let's use it!
      pre: code.
        var Car = new Class(
          function(name) {
            this.name = name;
          }, {
            drive: function() {
              console.log(this.name + " goes: vrooom!");
            }
          });

        var ferrari = new Car("Ferrari");
        ferrari.drive();  
        // Output: "Ferrari goes: vrooom!"

  section
    h2 Still missing some stuff:
    ul
      li Inheritance
      li Static methods
      li Private instance variables
      li But it works...

